/*
    Components: Input
    ---
    Input styles & sizes.
*/

/**
 *  1. The appearance property defines how elements appear by default.
 *     By setting the value to none the default appearance can be entirely redefined using other CSS properties.
 *
 *  2. Controls the application of anti-aliasing when fonts are rendered.
 *     Both Webkit & Firefox implements.
 *     Works only on Mac OS X platform.
 */

.itp-InputText {
    appearance: none; /* [1] */
    -webkit-font-smoothing: antialiased; /* [2] */
    -moz-osx-font-smoothing: grayscale; /* [2] */
    background-color: var(--colorWhite);
    border-radius: var(--radius);
    border: var(--borderWidth) var(--borderStyle) var(--colorNeutral200);
    color: var(--colorBlack);
    margin: 0;
    width: 100%;
    display: block;
    outline: none;
    line-height: normal;
    transition: all var(--animationDurationSecondary) var(--animationEasingPrimary);
}

.itp-InputText:focus {
    border-color: var(--colorNeutral);
}

.itp-InputText:disabled {
    background: var(--colorNeutral100);
    color: var(--colorNeutral500);
    border-color: var(--colorNeutral100);
}

.itp-InputHelper {
    display: block;
    color: var(--colorNeutral);
    @include margin-top(.25);

    &.has-error {
        color: var(--colorError);
    }
}

// Input sizes
.itp-InputText--sm {
    padding: calc(var(--spacingBase) / 2);
    font-size: calc(var(--ms-3) / var(--fontSizePrimary) * 1rem);
}

.itp-InputText--md {
    padding: var(--spacingBase);
    font-size: calc(var(--ms-1) / var(--fontSizePrimary) * 1rem);
}

.itp-InputText--lg {
    padding: var(--spacingLarge);
    font-size: calc(var(--ms0) / var(--fontSizePrimary) * 1rem);
}

// Input modifiers
.itp-InputText--prefix {
    border-radius: var(--radius) 0 0 var(--radius);
    border-right: 0;
}

.itp-InputText--bare {
    border: 0;
}

// Input select
.itp-InputSelect {
    position: relative;
    appearance: none;
    box-sizing: border-box;
    display: block;
    outline: none;
    width: 100%;
    vertical-align: middle;
    border: var(--borderWidth) var(--borderStyle) var(--colorNeutral300);
    border-radius: var(--radius);
    color: palette(color-neutral,dark);
    background: url('../img/svg/icon-dropdown.svg') no-repeat center right .75rem transparent;
    background-size: .75rem;
    line-height: normal;
    font-family: $alpha-font-family;
    cursor: pointer;
    transition: all .3s;

    &:focus {
        color: palette(color-neutral, x-dark);
        border-color: var(--colorNeutral);
    }

    &.has-error {
        border: 1px solid var(--colorError);

        &:focus {
            border-color: var(--colorError);
        }
    }
}

.itp-InputSelect--sm {
    padding: calc(var(--spacingBase) / 2);
    font-size: calc(var(--ms-3) / var(--fontSizePrimary) * 1rem);
}

.itp-InputSelect--md {
    padding: var(--spacingBase);
    font-size: calc(var(--ms-1) / var(--fontSizePrimary) * 1rem);
}

.itp-InputSelect--lg {
    padding: var(--spacingLarge);
    font-size: calc(var(--ms0) / var(--fontSizePrimary) * 1rem);
}

// Input checkbox
.itp-InputCheck {
    position: relative;
    display: flex;
    align-items: center;
    width: 100%;
    margin: 0;
    overflow: hidden;

    > label {
        margin: 0;
        line-height: 1;

        &::before {
            content: '';
            display: inline-block;
            position: relative;
            top: 3px;
            width: 1.25rem;
            height: 1.25rem;
            margin-right: .35rem;
            background-color: palette(color-neutral, x-light);
            border-radius: (var(--radius) / 2);
        }
    }

    > input {
        position: absolute;
        left: -2rem;
        top: 0;
    }

    > input:checked + label::before {
        background: palette(color-alpha) url('../img/svg/icon-check-white.svg') no-repeat center;
        background-size: .75rem;
    }

    > input:disabled + label {
        color: var(--colorNeutral);
    }
}

.itp-InputCheck--inline {
    display: inline-flex;
    width: auto;
    margin-right: 1rem;
}

.itp-InputRadio {
    position: relative;
    display: flex;
    align-items: center;
    width: 100%;
    margin: 0;
    overflow: hidden;
    @include padding-lr(1.5,0);

    > label {
        margin: 0;
        line-height: 1.5rem;

        &::before {
            content: '';
            display: inline-block;
            position: absolute;
            top: 3px;
            left: 0;
            width: 1.25rem;
            height: 1.25rem;
            margin-right: .35rem;
            background-color: palette(color-neutral, x-light);
            border-radius: (var(--radius) * 50);
        }
    }

    > input {
        position: absolute;
        left: -2rem;
        top: 0;
    }

    > input:checked + label::before {
        background: palette(color-alpha) url('../img/svg/icon-radio-white.svg') no-repeat center;
        background-size: .5rem;
    }

    > input:disabled + label {
        color: var(--colorNeutral);
    }
}

.itp-InputRadio--inline {
    display: inline-flex;
    width: auto;
    margin-right: 1rem;
}

// Input group
.itp-InputGroup {
    position: relative;
}

.itp-InputGroup--number {
    > .itp-InputText {
        text-align: center;
        @include padding-lr(3,3);
    }
}

    .itp-InputGroup__prepend {
        position: absolute;
        top: 6px;
        left: 0;
        bottom: 6px;
        display: flex;
        align-items: center;
        border-right: 1px var(--borderStyle) var(--colorNeutral300);
        color: var(--colorNeutral);
        font-weight: var(--fontWeightSecondary);
        @include padding-lr(1,1);
    }

    .itp-InputGroup__append {
        position: absolute;
        top: 6px;
        right: 0;
        bottom: 6px;
        display: flex;
        align-items: center;
        border-left: 1px var(--borderStyle) var(--colorNeutral300);
        color: var(--colorNeutral);
        font-weight: var(--fontWeightSecondary);
        @include padding-lr(1,1);
    }
